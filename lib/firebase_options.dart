// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:agrilink/env.dart' as Env;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static final web = FirebaseOptions(
    apiKey: Env.Env.apiKeyWeb,
    appId: Env.Env.appIdWeb,
    messagingSenderId: Env.Env.messagingSenderIdWeb,
    projectId: Env.Env.projectIdWeb,
    authDomain: Env.Env.authDomainWeb,
    storageBucket: Env.Env.storageBucketWeb,
    databaseURL: Env.Env.databaseURLWeb,
  );

  static final FirebaseOptions android = FirebaseOptions(
    apiKey: Env.Env.apiKeyAndroid,
    appId: Env.Env.appIdAndroid,
    messagingSenderId: Env.Env.messagingSenderIdAndroid,
    projectId: Env.Env.projectIdAndroid,
    storageBucket: Env.Env.storageBucketAndroid,
    databaseURL: Env.Env.databaseURLAndroid,
  );

  static final FirebaseOptions ios = FirebaseOptions(
    apiKey: Env.Env.apiKeyIOS,
    appId: Env.Env.appIdIOS,
    messagingSenderId: Env.Env.messagingSenderIdIOS,
    projectId: Env.Env.projectIdIOS,
    storageBucket: Env.Env.storageBucketIOS,
    iosClientId: Env.Env.iosClientId,
    iosBundleId: Env.Env.iosBundleId,
    databaseURL: Env.Env.databaseURLIOS,
  );
}
